/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package SEC2;

import java.util.*;
import java.nio.file.*;
import java.io.IOException;
import org.python.core.*;
import org.python.util.*;

import api.*;
import csv_plugin.CSVPlugin;
import progress_plugin.ProgressPlugin;

import java.io.*;


public class App 
{
    private static class myPluginController extends PluginController
    {
        private List<ResultListener> obs = new ArrayList<>();

        @Override
        public void addResultListener(ResultListener resultCb)
        {
            obs.add(resultCb);
        }

        @Override
        public void notifyResultListeners(double currInc, double yResult)
        {
            for(ResultListener p : this.obs)
            {
                p.resultUpdate(currInc, yResult);
            }
        }
    }


    private static final Scanner sc = new Scanner(System.in);
    private PluginController plugCtrl = new myPluginController();

    public void run() 
    {
        double minX, maxX, incX;
        String expression;

        expression = getExpression();
        if (!expression.isEmpty())
        {
            minX = getXValues("Enter a minimum x value");
            maxX = getXValues("Enter a maximum x value");
            incX = getXValues("Enter an increment value");

            plugCtrl.setExpression(expression, minX, maxX, incX);
            pyEvaluate(expression, minX, maxX, incX);
        }
        
    }

    private void pyEvaluate(String exp, double min, double max, double inc)
    {
        // Need to move and add this to plugin loader menu
        ProgressPlugin progPlug = new ProgressPlugin();
        CSVPlugin csvPlug = new CSVPlugin();
        progPlug.start(plugCtrl);
        csvPlug.start(plugCtrl);

        PythonInterpreter py = new PythonInterpreter();

        for(double x = min; x <= max; x += inc)
        {
            String subExp = exp.replaceAll("x", String.valueOf(x));
            double result = ((PyFloat) py.eval("float(" + subExp + ")")).getValue();
            plugCtrl.notifyResultListeners(x, result);
            // System.out.println("Result: " + result);
        }
    }

    /**
     * Get expression from users
     */
    private String getExpression()
    {
        String input;
        
        System.out.println("SEC Assignment 2");
        System.out.println("Enter a math expression (unknown variables are denoted as x");
        System.out.println("Expression:> ");
        
        input = sc.nextLine();

        return input;
    }

    /**
     * get Real number user input
     */
    private double getXValues(String prompt)
    {
        System.out.println(prompt);

        double input = sc.nextDouble();

        return input;
    }
}
